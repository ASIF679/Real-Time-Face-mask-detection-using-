# -*- coding: utf-8 -*-
"""Real Time Face Mask detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19tIVtM8OSw_V-izdULKb7npcBti-E_-s
"""

import os
import random
import shutil

from google.colab import drive
drive.mount("/content/drive", force_remount=True)



train_path='/content/drive/MyDrive/face_mask_detecion_dataset/train'
val_path='/content/drive/MyDrive/face_mask_detecion_dataset/val'
test_path='/content/drive/MyDrive/face_mask_detecion_dataset/test'

!git clone http://github.com/ultralytics/yolov5

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/yolov5

!pip install -r requirements.txt

!wget http://github.com/ultralytics/yolov5/releases/download/v6.0/yolov5s.pt

# Commented out IPython magic to ensure Python compatibility.
# %env WANDB_MODE=disabled

!python train.py --imgsz 416 --batch-size 8 --epochs 50 --data /content/drive/MyDrive/face_mask_detecion_dataset/dataset.yaml --weights /content/drive/MyDrive/face_mask_detecion_dataset/yolov5s.pt --nosave --cache

!python detect.py --source /content/drive/MyDrive/face_mask_detecion_dataset/test --weights /content/yolov5/runs/train/exp9/weights/last.pt --img 416 --save-txt --save-conf

# Commented out IPython magic to ensure Python compatibility.
import cv2
import matplotlib.pyplot as plt
# %matplotlib inline

image = cv2.imread("/content/yolov5/runs/detect/exp3/crowd_mask62.jpg")
height, width = image.shape[:2]
resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)
fig = plt.gcf()
fig.set_size_inches(18, 10)
plt.axis("off")
plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
plt.show()

!pip install opencv-python-headless

import cv2
import torch
model = torch.hub.load('ultralytics/yolov5', 'custom', path='/content/yolov5/runs/train/exp9/weights/last.pt')  # Replace with your weights